package io.mtc.modules.sap.entity;

import java.io.Serializable;
import java.math.BigDecimal;

public class MtcSdDLD1 implements Serializable {
    /**
     * 内部标识
     * 表 : MTC_SD_DLD1
     * 对应字段 : DocEntry
     */
    private Integer docentry;

    /**
     * 行号
     * 表 : MTC_SD_DLD1
     * 对应字段 : LineNum
     */
    private Integer linenum;

    /**
     * 产品编号
     * 表 : MTC_SD_DLD1
     * 对应字段 : ItemCode
     */
    private String itemcode;

    /**
     * 产品名称
     * 表 : MTC_SD_DLD1
     * 对应字段 : ItemName
     */
    private String itemname;

    /**
     * 单价
     * 表 : MTC_SD_DLD1
     * 对应字段 : Price
     */
    private BigDecimal price;

    /**
     * 数量
     * 表 : MTC_SD_DLD1
     * 对应字段 : Quantity
     */
    private BigDecimal quantity;

    /**
     * 金额
     * 表 : MTC_SD_DLD1
     * 对应字段 : LineTotal
     */
    private BigDecimal linetotal;

    /**
     * 包重
     * 表 : MTC_SD_DLD1
     * 对应字段 : Factor1
     */
    private BigDecimal factor1;

    /**
     * 包数
     * 表 : MTC_SD_DLD1
     * 对应字段 : Factor2
     */
    private BigDecimal factor2;

    /**
     * 已使用数量
     * 表 : MTC_SD_DLD1
     * 对应字段 : UesdQty
     */
    private BigDecimal uesdqty;

    /**
     * 剩余数量
     * 表 : MTC_SD_DLD1
     * 对应字段 : LastQty
     */
    private BigDecimal lastqty;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MTC_SD_DLD1
     *
     * @mbg.generated Wed Mar 06 15:22:46 CST 2019
     */
    private static final long serialVersionUID = 1L;

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.DocEntry：内部标识
     */
    public Integer getDocentry() {
        return docentry;
    }

    /**
     * set method 
     *
     * @param docentry  内部标识
     */
    public void setDocentry(Integer docentry) {
        this.docentry = docentry;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.LineNum：行号
     */
    public Integer getLinenum() {
        return linenum;
    }

    /**
     * set method 
     *
     * @param linenum  行号
     */
    public void setLinenum(Integer linenum) {
        this.linenum = linenum;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.ItemCode：产品编号
     */
    public String getItemcode() {
        return itemcode;
    }

    /**
     * set method 
     *
     * @param itemcode  产品编号
     */
    public void setItemcode(String itemcode) {
        this.itemcode = itemcode == null ? null : itemcode.trim();
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.ItemName：产品名称
     */
    public String getItemname() {
        return itemname;
    }

    /**
     * set method 
     *
     * @param itemname  产品名称
     */
    public void setItemname(String itemname) {
        this.itemname = itemname == null ? null : itemname.trim();
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.Price：单价
     */
    public BigDecimal getPrice() {
        return price;
    }

    /**
     * set method 
     *
     * @param price  单价
     */
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.Quantity：数量
     */
    public BigDecimal getQuantity() {
        return quantity;
    }

    /**
     * set method 
     *
     * @param quantity  数量
     */
    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.LineTotal：金额
     */
    public BigDecimal getLinetotal() {
        return linetotal;
    }

    /**
     * set method 
     *
     * @param linetotal  金额
     */
    public void setLinetotal(BigDecimal linetotal) {
        this.linetotal = linetotal;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.Factor1：包重
     */
    public BigDecimal getFactor1() {
        return factor1;
    }

    /**
     * set method 
     *
     * @param factor1  包重
     */
    public void setFactor1(BigDecimal factor1) {
        this.factor1 = factor1;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.Factor2：包数
     */
    public BigDecimal getFactor2() {
        return factor2;
    }

    /**
     * set method 
     *
     * @param factor2  包数
     */
    public void setFactor2(BigDecimal factor2) {
        this.factor2 = factor2;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.UesdQty：已使用数量
     */
    public BigDecimal getUesdqty() {
        return uesdqty;
    }

    /**
     * set method 
     *
     * @param uesdqty  已使用数量
     */
    public void setUesdqty(BigDecimal uesdqty) {
        this.uesdqty = uesdqty;
    }

    /**
     * get method 
     *
     * @return MTC_SD_DLD1.LastQty：剩余数量
     */
    public BigDecimal getLastqty() {
        return lastqty;
    }

    /**
     * set method 
     *
     * @param lastqty  剩余数量
     */
    public void setLastqty(BigDecimal lastqty) {
        this.lastqty = lastqty;
    }

    /**
     *
     * @param that
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        MtcSdDLD1 other = (MtcSdDLD1) that;
        return (this.getDocentry() == null ? other.getDocentry() == null : this.getDocentry().equals(other.getDocentry()))
            && (this.getLinenum() == null ? other.getLinenum() == null : this.getLinenum().equals(other.getLinenum()))
            && (this.getItemcode() == null ? other.getItemcode() == null : this.getItemcode().equals(other.getItemcode()))
            && (this.getItemname() == null ? other.getItemname() == null : this.getItemname().equals(other.getItemname()))
            && (this.getPrice() == null ? other.getPrice() == null : this.getPrice().equals(other.getPrice()))
            && (this.getQuantity() == null ? other.getQuantity() == null : this.getQuantity().equals(other.getQuantity()))
            && (this.getLinetotal() == null ? other.getLinetotal() == null : this.getLinetotal().equals(other.getLinetotal()))
            && (this.getFactor1() == null ? other.getFactor1() == null : this.getFactor1().equals(other.getFactor1()))
            && (this.getFactor2() == null ? other.getFactor2() == null : this.getFactor2().equals(other.getFactor2()))
            && (this.getUesdqty() == null ? other.getUesdqty() == null : this.getUesdqty().equals(other.getUesdqty()))
            && (this.getLastqty() == null ? other.getLastqty() == null : this.getLastqty().equals(other.getLastqty()));
    }

    /**
     *
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getDocentry() == null) ? 0 : getDocentry().hashCode());
        result = prime * result + ((getLinenum() == null) ? 0 : getLinenum().hashCode());
        result = prime * result + ((getItemcode() == null) ? 0 : getItemcode().hashCode());
        result = prime * result + ((getItemname() == null) ? 0 : getItemname().hashCode());
        result = prime * result + ((getPrice() == null) ? 0 : getPrice().hashCode());
        result = prime * result + ((getQuantity() == null) ? 0 : getQuantity().hashCode());
        result = prime * result + ((getLinetotal() == null) ? 0 : getLinetotal().hashCode());
        result = prime * result + ((getFactor1() == null) ? 0 : getFactor1().hashCode());
        result = prime * result + ((getFactor2() == null) ? 0 : getFactor2().hashCode());
        result = prime * result + ((getUesdqty() == null) ? 0 : getUesdqty().hashCode());
        result = prime * result + ((getLastqty() == null) ? 0 : getLastqty().hashCode());
        return result;
    }

    /**
     *
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", docentry=").append(docentry);
        sb.append(", linenum=").append(linenum);
        sb.append(", itemcode=").append(itemcode);
        sb.append(", itemname=").append(itemname);
        sb.append(", price=").append(price);
        sb.append(", quantity=").append(quantity);
        sb.append(", linetotal=").append(linetotal);
        sb.append(", factor1=").append(factor1);
        sb.append(", factor2=").append(factor2);
        sb.append(", uesdqty=").append(uesdqty);
        sb.append(", lastqty=").append(lastqty);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}